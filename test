apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "game-provider.fullname" . }} # use helm templating to generate a unique name
  labels: #  help categorize the Deployment
    {{- include "game-provider.labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: 3  # Keeps the last 3 deployment revisions for rollbacks
  # if autoscaling is disabled, it uses the replicaCount from values.yaml.Otherwise, it ignores replicaCount.
  #  Number of pods (controlled by Values.replicaCount from Helm values.yaml
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  # pod selector
  selector:
   # Ensures that only pods with matching labels (game-provider.selectorLabels) are managed by this deployment.

    matchLabels:
      {{- include "game-provider.selectorLabels" . | nindent 6 }} 
  {{- with .Values.strategy }}
  #  If a strategy is defined in values.yaml, it is inserted here.
  strategy:
    {{- toYaml . | nindent 6 }}
  {{- end }}
  # pod template
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "game-provider.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: 45 # Gives Pods 45 seconds to shut down gracefully before being killed
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.container.ports }}
          ports: # Defines which ports the container should expose
            {{- toYaml . | nindent 12 }}
          {{- end }}
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "15"]
          livenessProbe: # Checks if the container is still running. If it fails, the pod is restarted.
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe: # Checks if the container is ready to accept traffic
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources: # Defines CPU & memory limits for the container.
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            {{- range .Values.envFromSecrets}}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Namespace }}-secret
                  key: {{ .key }}
            {{- end}}
      {{- with .Values.nodeSelector }}
      nodeSelector: # Forces the pod to run on specific nodes.
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: # Controls where the pod can run
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}